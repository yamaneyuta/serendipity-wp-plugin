schema {
	query: Query
	mutation: Mutation
}

type Query {

	post(postID: Int!): Post! # 投稿情報を取得

	# 販売者情報を取得
	seller: Seller!

	# -------------------- 以下、管理者向けクエリ --------------------

	# # 投稿一覧を取得
	# allPosts: [Post!]!

	# プラグインに含まれている販売者向け利用規約を取得
	# ※ 管理者権限以上で使用可
	currentSellerTerms: Terms!

	# 全ネットワークカテゴリ一覧を取得
	# ※ 投稿編集権限以上で使用可
	allNetworkCategories: [NetworkCategory!]!
}

type Mutation {
	# 購入用のチケットを発行
	issuePurchaseTicket(postID: Int!, chainID: Int!, purchaseSymbol: String!): PurchaseTicketInfo

	# (訪問者が)購入可能なチェーン一覧を設定
	# ※ 管理者権限以上で使用可
	setPayableChains(networkCategoryID: Int!, chainIDs: [Int!]!): Boolean!

	# 販売者の利用規約同意情報を設定
	# ※ 管理者権限以上で使用可
	setSellerAgreedTerms(version: Int!, signature: String!): Boolean!
}

# 投稿に関する情報
type Post {
	id: Int!
	title: String!
	sellingPrice: Price                     # 販売価格
	sellingNetworkCategory: NetworkCategory # 販売している(=購入可能な)ネットワークカテゴリ
	sellingContent: SellingContent  # 販売対象の投稿内容に関する情報
}

type NetworkCategory {
	id: Int!
	chains: [Chain!]! # このカテゴリに含まれるチェーン一覧
	sellableSymbols: [String!]! # 販売価格として設定可能な通貨シンボル一覧
}

type Chain {
	id: Int!
	isPayable: Boolean!	# (訪問者が)支払いに使用可能かどうか
	# symbol: String!
}

type Price {
	amountHex: String!	# 金額(0xプレフィックス付きの16進数)
	decimals: Int!  	# 小数点以下の桁数
	symbol: String! 	# 通貨記号(`USD`, `ETH`等)。記号(`$`等)不可。
}

# 販売対象となっている投稿コンテンツの(保存されているHTMLに関する)情報
type SellingContent {
	characterCount: Int!	# 文字数
	# 単語数はPHPでカウントすることが難しいため見送り	wordCount: Int!			# 単語数
	imageCount: Int!		# 画像数
}

type PurchaseTicketInfo {
	purchaseTicketIdHex: String!	# チケットID(0xプレフィックス付きの16進数)
	sellerSignature: String!		# 販売者の署名
	sellerSignatureVersion: Int!	# 販売者の署名バージョン
	paymentTokenAddress: String!	# 支払いトークンのアドレス
	paymentAmountHex: String!		# 支払う数量(0xプレフィックス付きの16進数)
}

# 販売者情報
type Seller {
	agreedTerms: AgreedTerms  # 販売者が同意した利用規約(利用規約に同意していない場合はnull)
}

# 利用規約同意情報
type AgreedTerms {
	version: Int!		# 同意した利用規約のバージョン
	message: String!	# 利用規約に同意する際、ウォレットに表示されたメッセージ
	signature: String!	# 利用規約に同意する際、ウォレットに表示されたメッセージに対する署名
}

# 利用規約情報
type Terms {
	version: Int!		# 利用規約のバージョン
	message: String!	# 利用規約同意時のメッセージ(ウォレットに表示されるメッセージ)
}
