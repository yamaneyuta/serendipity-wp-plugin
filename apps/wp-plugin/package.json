{
  "name": "qik-chain-pay",
  "version": "0.8.0",
  "private": true,
  "description": "Allows you to implement a paywall using crypto-assets.",
  "license": "Split License",
  "author": "yamaneyuta",
  "main": "build/index.js",
  "scripts": {
    "prebuild": "npm run clean:php-cache",
    "build": "run-s build:*",
    "prebuild:block": "graphql-codegen",
    "build:block": "wp-scripts build",
    "check-license": "run-s check-license:*",
    "check-license:js": "license-checker --production --excludePrivatePackages --onlyAllow '0BSD;Apache-2.0 WITH LLVM-exception;BSD-2-Clause;BSD-3-Clause;CC0-1.0;CC-BY-3.0;GPL-2.0-or-later;ISC;MIT' > /dev/null",
    "check-license:php": "tsx .bin/check-php-license",
    "clean": "run-p clean:*",
    "clean:coverage": "rm -rf coverage",
    "clean:js": "rm -rf build/*",
    "clean:php-cache": "rm -rf includes/cache/*.php",
    "coverage": "run-s coverage:*",
    "coverage:js": "jest --coverage",
    "coverage:php": "npm run test:php -- --coverage-html coverage/phpunit",
    "// wp-envの起動設定(--xdebug=)によってphpunitのテストは問題なく終了するがカバレッジレポートが出力されない、という状況になるため、": "",
    "// カバレッジレポートが出力されているかどうかのチェック処理を`postcoverage:php`に記述している。": "",
    "postcoverage:php": "test -f coverage/phpunit/index.html || exit 1",
    "premy-docker:start": "bash ./.devcontainer/development-internal/update-compose-network.sh",
    "my-docker:start": "bash ./.devcontainer/development-internal/start.sh",
    "// `WP_ENV_MYSQL_PORT`,`WP_ENV_TESTS_MYSQL_PORT`,`WP_ENV_PHPMYADMIN_PORT`,`WP_ENV_TESTS_PHPMYADMIN_PORT`を": "",
    "// 指定すると証明書エラーが発生(原因未調査)": "",
    "wp-env:start": "WP_ENV_PHP_VERSION=${PHP_VERSION} WP_ENV_CORE=WordPress/WordPress#${WP_VERSION} wp-env start --xdebug=develop,coverage,debug",
    "wp-env:reset": "wp-env clean all && npm run wp-env:start",
    "wp-env:destroy": "wp-env destroy",
    "export": "run-s export:license:*",
    "export:license:block": "export-license -o public/license/npm -m public/license/block.json",
    "export:license:php": "export-license -s includes -o public/license/composer -m public/license/backend.json",
    "format": "run-s format:js format:php",
    "format:js": "eslint --fix . && prettier --write .",
    "format:php": "phpcbf .",
    "// この`i18n`コマンドは間接的に`wp-env run cli wp 18n`コマンドを呼び出します。": "",
    "// そのため、`wp-env start`で起動されるcli実行用のコンテナが立ち上がっていない場合、失敗します。": "",
    "// `prepare`で`i18n`コマンドを実行すると高確率で失敗するので注意してください。": "",
    "i18n": "tsx .bin/i18n",
    "lint": "run-s lint:*",
    "// lint:css": "wp-scripts lint-style",
    "lint:js": "tsc --noEmit --noUnusedLocals --noUnusedParameters && eslint . && prettier --check .",
    "// `lint:php`はドキュメントのコメント等、時間がかかるものばかりのため一時的にコメントアウト": "",
    "// lint:php": "phpcs -s .",
    "packages-update": "wp-scripts packages-update",
    "prepare": "tsx .bin/change-wp-env-database.ts",
    "preplugin-zip": "run-s clean i18n build",
    "plugin-zip": "wp-scripts plugin-zip",
    "release": "npx release-it",
    "// 支払データを初期化し、再度同一ページで購入できるようにします。※ブラウザ側のlocalstorageは手動で削除してください。": "",
    "reset:payment-data": "wp-env run cli wp eval-file wp-content/plugins/workspaces/.bin/reset-payment-data.php",
    "start:docker": "run-p env:start my-docker:start",
    "test": "run-s test:js test:php",
    "// 1つのファイルをテストする場合はテスト対象ファイルのパスを後ろに付与してください => npm run test:php ./phpunit/classes/path-to-test-file.php": "",
    "test:php": "npm run clean:php-cache && npx wp-env run --env-cwd=\"wp-content/plugins/${PWD##*/}\" tests-cli tests/vendor/bin/phpunit -- -c phpunit.xml --testdox",
    "test:js": "jest",
    "test:storybook": "npm run build-storybook && concurrently -k -s first -n \"SB,TEST\" -c \"magenta,blue\" \"npx http-server storybook-static --port 6006 --silent\" \"npx wait-on tcp:6006 && npm run test-storybook\"",
    "test-storybook": "test-storybook --url http://localhost:6006 --coverage --browsers firefox chromium",
    "storybook": "storybook dev -p 6006",
    "build-storybook": "storybook build",
    "update:php-package": "cd includes && composer update",
    "update:package": "npx npm-check-updates -u --target minor",
    "prewatch": "npm run prebuild",
    "watch": "run-p watch:*",
    "prewatch:block": "npm run prebuild:block",
    "watch:block": "wp-scripts start",
    "watch:graphql": "graphql-codegen --watch"
  },
  "# note": {
    "// - scripts": "",
    "//   - check-license: ": "",
    "//     - 'GPLv3'や'GPLv3 or later'はGPLv2と互換がないため指定不可": "",
    "//        ⇒ https://www.gnu.org/licenses/gpl-faq.ja.html#gpl-compat-matrix": "",
    "//     - 'Apache-2.0'はGPLv2と互換がないため指定不可": "",
    "//     - 'Apache-2.0 WITH LLVM-exception'は指定可": "",
    "//        ⇒ https://github.com/ccampbell/mousetrap/issues/421": "",
    "// - devDependencies: ": "",
    "//   - @wordpress/scripts": "",
    "//     - WordPress6.5以前を対象とする場合、はv27を使う必要がある ": "",
    "//       => https://github.com/WordPress/gutenberg/blob/d649865283aff3545f9754a01c92982e37602dc8/packages/scripts/CHANGELOG.md#breaking-changes-2": ""
  },
  "dependencies": {
    "@tanstack/react-query": "^4.39.1",
    "@wordpress/block-editor": "^13.4.0",
    "@wordpress/blocks": "^13.10.0",
    "@wordpress/components": "^29.12.0",
    "@wordpress/element": "^6.26.0",
    "@wordpress/i18n": "^5.26.0",
    "@wordpress/icons": "^10.24.0",
    "assert": "^2.1.0",
    "async-lock": "^1.4.1",
    "fast-deep-equal": "^3.1.3",
    "graphql": "^16.11.0",
    "react": "^18.3.1",
    "react-dom": "^18.3.1"
  },
  "devDependencies": {
    "@chromatic-com/storybook": "^1.9.0",
    "@graphql-codegen/cli": "^5.0.6",
    "@graphql-codegen/client-preset": "^4.8.1",
    "@graphql-codegen/typescript-react-query": "^6.1.1",
    "@jest/globals": "^30.0.3",
    "@serendipity/config": "workspace:*",
    "@storybook/addon-coverage": "^1.0.5",
    "@storybook/addon-essentials": "^8.6.14",
    "@storybook/addon-interactions": "^8.6.14",
    "@storybook/addon-links": "^8.6.14",
    "@storybook/addon-onboarding": "^8.6.14",
    "@storybook/addon-webpack5-compiler-swc": "^1.0.6",
    "@storybook/blocks": "^8.6.14",
    "@storybook/react": "^8.6.14",
    "@storybook/react-webpack5": "^8.6.14",
    "@storybook/test": "^8.6.14",
    "@storybook/test-runner": "^0.22.0",
    "@testing-library/dom": "^10.4.0",
    "@testing-library/react": "^16.3.0",
    "@types/assert": "^1.5.11",
    "@types/async-lock": "^1.4.2",
    "@types/js-yaml": "^4.0.9",
    "@types/license-checker": "^25.0.6",
    "@types/mocha": "^10.0.10",
    "@types/react": "^18.3.23",
    "@types/react-dom": "^18.3.7",
    "@types/wordpress__block-editor": "^11.5.16",
    "@types/wordpress__blocks": "^12.5.17",
    "@wordpress/env": "^10.24.0",
    "@wordpress/scripts": "^27.9.0",
    "@yamaneyuta/serendipity-dev-export-license": "github:yamaneyuta/serendipity-dev-export-license#0.8.6",
    "@yamaneyuta/serendipity-lib-frontend": "github:yamaneyuta/serendipity-lib-frontend#0.8.10",
    "concurrently": "^8.2.2",
    "eslint": "^8.57.1",
    "eslint-plugin-storybook": "^0.12.0",
    "glob": "^11.0.3",
    "jest": "^30.0.3",
    "js-yaml": "^4.1.0",
    "license-checker": "^25.0.1",
    "npm-run-all": "^4.1.5",
    "prettier": "npm:wp-prettier@^3.0.3",
    "storybook": "^8.6.14",
    "tsx": "^4.19.4",
    "typescript": "^5.8.3"
  },
  "turborepo": {
    "pipeline": {
      "build": {
        "outputs": [
          "build/**",
          "src/types/gql/generated.ts"
        ]
      },
      "coverage": {
        "outputs": [
          "coverage/**",
          "build/**",
          "src/types/gql/generated.ts"
        ]
      }
    }
  }
}
